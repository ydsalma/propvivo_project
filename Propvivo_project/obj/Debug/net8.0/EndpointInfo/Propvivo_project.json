{
  "openapi": "3.0.1",
  "info": {
    "title": "Propvivo_project",
    "version": "1.0"
  },
  "paths": {
    "/api/Attendances": {
      "get": {
        "tags": [
          "Attendances"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attendance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attendance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attendance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attendances"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attendances/{id}": {
      "get": {
        "tags": [
          "Attendances"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendances"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Attendance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Attendances"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/EmpTasks": {
      "get": {
        "tags": [
          "EmpTasks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpTask"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpTask"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmpTask"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmpTasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmpTasks/{id}": {
      "get": {
        "tags": [
          "EmpTasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmpTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmpTasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmpTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "EmpTasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Queries": {
      "get": {
        "tags": [
          "Queries"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Query"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Query"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Query"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Queries"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              }
            }
          }
        }
      }
    },
    "/api/Queries/{id}": {
      "get": {
        "tags": [
          "Queries"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Queries"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Queries"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/QueryResponses": {
      "get": {
        "tags": [
          "QueryResponses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueryResponses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/QueryResponses/{id}": {
      "get": {
        "tags": [
          "QueryResponses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueryResponses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "QueryResponses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Roles"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Roles"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Roles"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              }
            }
          }
        }
      }
    },
    "/api/Roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TaskAssignments": {
      "get": {
        "tags": [
          "TaskAssignments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskAssignment"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskAssignment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskAssignment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskAssignments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskAssignments/{id}": {
      "get": {
        "tags": [
          "TaskAssignments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskAssignments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TaskAssignments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TaskLogs": {
      "get": {
        "tags": [
          "TaskLogs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLog"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLog"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskLogs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskLogs/{id}": {
      "get": {
        "tags": [
          "TaskLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLog"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TaskLogs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Attendance": {
        "type": "object",
        "properties": {
          "attendanceId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "workDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalWorkMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalBreakMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "completed8Hours": {
            "type": "boolean",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "EmpTask": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "estimatedHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isSelfAssigned": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskAssignment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Query": {
        "type": "object",
        "properties": {
          "queryId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subject": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignment": {
            "$ref": "#/components/schemas/TaskAssignment"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "responseId": {
            "type": "integer",
            "format": "int32"
          },
          "queryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responseText": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "responder": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "RoleRequest": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Roles": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskAssignment": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignedTo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedUser": {
            "$ref": "#/components/schemas/User"
          },
          "task": {
            "$ref": "#/components/schemas/EmpTask"
          },
          "taskLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskLog"
            },
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Query"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskLog": {
        "type": "object",
        "properties": {
          "logId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isBreak": {
            "type": "boolean",
            "nullable": true
          },
          "durationMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignment": {
            "$ref": "#/components/schemas/TaskAssignment"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "passwordHash": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Roles"
          },
          "createdTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmpTask"
            },
            "nullable": true
          },
          "assignedTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskAssignment"
            },
            "nullable": true
          },
          "attendances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attendance"
            },
            "nullable": true
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Query"
            },
            "nullable": true
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}